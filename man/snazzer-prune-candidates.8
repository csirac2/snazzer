.\" Automatically generated by Pod::Man 2.28 (Pod::Simple 3.28)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{
.    if \nF \{
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "snazzer-prune-candidates 8"
.TH snazzer-prune-candidates 8 "2016-10-16" "0.1" ""
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
snazzer\-prune\-candidates \- reduce a set of lines containing datetimes to only
those which are no longer needed to meet retention preferences
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 2
\& find /some/.snapshotz \-maxdepth 1 \-mindepth 1 \-type d | \e
\&   snazzer\-prune\-candidates | xargs btrfs subvolume delete
\&
\& echo \-e "2015\-02\-01T000000Z\en2015\-02\-01T000010Z" | snazzer\-prune\-candidates
\&
\& snazzer\-prune\-candidates \-\-gen\-example\-input  | \e
\&   ./snazzer\-prune\-candidates \-\-invert
.Ve
.SH "OPTIONS"
.IX Header "OPTIONS"
.IP "\fB\-\-invert:\fR Invert output to contain only lines which should be retained" 4
.IX Item "--invert: Invert output to contain only lines which should be retained"
.PD 0
.IP "\fB\-\-gen\-example\-input:\fR Generate example datetime strings for testing" 4
.IX Item "--gen-example-input: Generate example datetime strings for testing"
.IP "\fB\-\-verbose:\fR Verbose debugging output to \s-1STDERR\s0" 4
.IX Item "--verbose: Verbose debugging output to STDERR"
.IP "\fB\-\-help:\fR Brief help message" 4
.IX Item "--help: Brief help message"
.IP "\fB\-\-man:\fR Full documentation" 4
.IX Item "--man: Full documentation"
.IP "\fB\-\-man\-roff:\fR Full documentation as *roff output, Eg:" 4
.IX Item "--man-roff: Full documentation as *roff output, Eg:"
.PD
.Vb 1
\&    snazzer\-prune\-candidates \-\-man\-roff | nroff \-man
.Ve
.IP "\fB\-\-man\-markdown:\fR Full documentation as markdown output, Eg:" 4
.IX Item "--man-markdown: Full documentation as markdown output, Eg:"
.Vb 1
\&    snazzer\-prune\-candidates \-\-man\-markdown > snazzer\-prune\-candidates\-man.md
.Ve
.IP "\fB\-\-tests:\fR Run tests (for developers/maintainers)" 4
.IX Item "--tests: Run tests (for developers/maintainers)"
.PD 0
.IP "\fB\-\-force\-tty\-stdin:\fR Skip checks for interactive tty on \s-1STDIN\s0" 4
.IX Item "--force-tty-stdin: Skip checks for interactive tty on STDIN"
.PD
.SH "ENVIRONMENT"
.IX Header "ENVIRONMENT"
.IP "\(bu" 1
\&\s-1SNAZZER_YEARLIES_TO_KEEP\s0
.Sp
Keep one date per year for the last N years. Default: 1000
.IP "\(bu" 1
\&\s-1SNAZZER_MONTHLIES_TO_KEEP\s0
.Sp
Keep one date per month for the last N months. Default: 12
.IP "\(bu" 1
\&\s-1SNAZZER_DAYLIES_TO_KEEP\s0
.Sp
Keep one date per day for the last N days. Default: 31
.IP "\(bu" 1
\&\s-1SNAZZER_HOURLIES_TO_KEEP\s0
.Sp
Keep one date per hour for the last N hours. Default: 24
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
\&\fBsnazzer-prune-candidates\fR reads lines of input from \s-1STDIN\s0 which are expected
to end in datetimes which are a subset of valid \s-1ISO 8601\s0 strings:
.PP
.Vb 4
\&    YYYY\-MM\-DD
\&    YYYY\-MM\-DDTHHMMSSZ
\&    YYYY\-MM\-DDTHHMMSS+HH
\&    YYYY\-MM\-DDTHHMMSS\-HHMM
.Ve
.PP
The parsing is a dumb regex to avoid library dependencies. It is lax about what,
if anything separates date or time parts \- so for example, the following are
also valid (and demonstrate that only the end of these lines are parsed \- but
note that if a line is considered unnecessary, it will be printed unchanged in
full to \s-1STDOUT\s0):
.PP
.Vb 3
\&    /any/old/junk/YYYYMMDD
\&    /any/old/junk/YYYY_MM_DDTHH:MM:SSZ
\&    /any/old/junk/YYYY\-MM\-DDTHH_MM_SS+HH:MM
.Ve
.PP
Lines which aren't required to meet retention preferences are printed to \s-1STDOUT.\s0
.PP
\&\fB\s-1NOTE:\s0\fR Command-line options override environment variables.
.PP
\&\fB\s-1NOTE:\s0\fR the description in \s-1OPTIONS\s0 mentions \*(L"last N <years/months/etc>\*(R".
This refers to the period of time looking back from the most recent date seen at
the input. \fBsnazzer-prune-candidates\fR does not use the local system time for
any decision-making part of the program.
.SH "EXIT STATUS"
.IX Header "EXIT STATUS"
\&\fBsnazzer-prune-candidates\fR will abort with an error message printed to \s-1STDOUT\s0
and non-zero exit status under the following conditions:
.IP "1. A retention preference value contains anything other than digits" 1
.IX Item "1. A retention preference value contains anything other than digits"
.PD 0
.IP "2. Line does not end in a valid datetime string pattern" 1
.IX Item "2. Line does not end in a valid datetime string pattern"
.IP "3. Datetime contains obviously non-sensical digits" 1
.IX Item "3. Datetime contains obviously non-sensical digits"
.IP "4. Detected an interactive tty and no \-\-force\-tty\-stdin option was given" 1
.IX Item "4. Detected an interactive tty and no --force-tty-stdin option was given"
.PD
.SH "BUGS AND LIMITATIONS"
.IX Header "BUGS AND LIMITATIONS"
.IP "\(bu" 4
Homebrew datetime code
.Sp
Due to a desire to avoid any non-core library dependencies there may be bugs
with all the fun things that happen with home-brew time handling code: daylight
savings, leap\-years/hours/minutes/seconds and treatment of mixed timezones.
.Sp
A future version should try to use an appropriate datetime library to completely
offload normalization, differencing and comparison of datetimes when available.
.IP "\(bu" 4
When some datetimes are close together, they mightn't be pruned
.Sp
\&\fBsnazzer-prune-candidates\fR iterates over each line of the input several times:
once each to mark datetimes required to be kept to meet hourly, daily, monthly
and yearly retention preferences. At the end of this process, all unmarked lines
may safely be dropped and those are emitted for pruning.
.Sp
However, rather than require exactly 60mins, 24hrs, 28/29/30/31 days etc.
between snapshots \- which would risk dropping some previously retained datetimes
depending on how far your snapshot runs drift from their usual schedule \- the
algorithm instead marks whichever datetime would most closely satisfy the
retention requirement relative to the previously marked item.
.Sp
The end result is that occasionally (for example) a snapshot which has been
marked as the best choice to meet the monthly requirement isn't quite the same
snapshot as the one that has already been marked to meet the daily retention
requirement, although they may be very close together in time. In fact, when
starting out from very few snapshots to begin with, you may find several
snapshots very close together are being retained toward the end of your set of
snapshots due to the coarser retention periods marking out snapshots which are
only a few minutes/hours older than other marked snapshots simply because they
are slightly closer to the next retention interval (even if that difference
seems trivial). If this bothers you, please provide feedback or patches to the
author.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
snazzer, snazzer-measure, snazzer-receive
.SH "AUTHOR"
.IX Header "AUTHOR"
Paul Harvey <csirac2@gmail.com>, https://github.com/csirac2/snazzer
.SH "LICENSE AND COPYRIGHT"
.IX Header "LICENSE AND COPYRIGHT"
Copyright (c) 2015, Paul Harvey <csirac2@gmail.com> All rights reserved.
.PP
Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions are met:
.PP
1. Redistributions of source code must retain the above copyright notice, this
list of conditions and the following disclaimer.
.PP
2. Redistributions in binary form must reproduce the above copyright notice,
this list of conditions and the following disclaimer in the documentation
and/or other materials provided with the distribution.
.PP
\&\s-1THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \*(L"AS IS\*(R" AND
ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
DAMAGES \s0(\s-1INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
SERVICES\s0; \s-1LOSS OF USE, DATA, OR PROFITS\s0; \s-1OR BUSINESS INTERRUPTION\s0) \s-1HOWEVER
CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
OR TORT \s0(\s-1INCLUDING NEGLIGENCE OR OTHERWISE\s0) \s-1ARISING IN ANY WAY OUT OF THE USE
OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\s0
